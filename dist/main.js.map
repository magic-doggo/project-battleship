{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtC8C;;AAEvC;AACP;AACA,+BAA+B,wDAAS;AACxC;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoC;AACW;AACS;;AAExD,qBAAqB,6CAAI;AACzB;AACA,gBAAgB,uBAAuB;AACvC;AACA;;AAEA,qBAAqB,wDAAS;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kC","sources":["webpack://project-battleship/./src/game-board-class.js","webpack://project-battleship/./src/player-class.js","webpack://project-battleship/./src/ship-class.js","webpack://project-battleship/webpack/bootstrap","webpack://project-battleship/webpack/runtime/define property getters","webpack://project-battleship/webpack/runtime/hasOwnProperty shorthand","webpack://project-battleship/webpack/runtime/make namespace object","webpack://project-battleship/./src/index.js"],"sourcesContent":["export class GameBoard {\n    constructor() {\n\n        this.boardArray = new Array(100);\n        // x   0     1     2\n        // 0 [0,0] [0,1] [0,2]\n        // 1 [1,0] [1,1] [1,2]\n        // 2 [2,0] [2,1] [2,2]\n        this.placedShipsCoordinates = [];\n        this.hitCoordinates = [];\n    }\n\n    // placeShip(\"boat-length 3\", [6,7], vertical) == means the boat starts 6,7 and ends at [6,9]\n    //try vertical always going down, horizontal always goes to the right?\n    placeShip(ship, coordinates, direction) {\n        let arrayCoords = (coordinates[0] * 10) + coordinates[1];\n        for (let i = 0; i < ship.length; i++) {\n            if (direction == \"vertical\") {\n                if (coordinates[0] + ship.length >= 10) throw new Error('ship does not fit vertically');\n                this.boardArray[arrayCoords] = 1; \n                //increase by 10 when row changes (vertical changes)\n                arrayCoords += 10;\n            } else if (direction == \"horizontal\") {\n                if (coordinates[1] + ship.length >= 10) throw new Error('ship does not fit horizontally');\n                //increase by 1 when column changes (horizontal changes)\n                this.boardArray[arrayCoords] = 1;\n                arrayCoords += 1;\n            }\n        }\n    }\n\n    receivedAttack(coordinates) {\n    //     let arrayCoords = (coordinates[0]*10) + coordinates[1];\n    //     if (this.boardArray[arrayCoords] == 1) {\n    //         this.boardArray[arrayCoords = \"x\"];\n    //         // ship.hit()\n    //     }\n    }\n}\n","import { GameBoard } from \"./game-board-class\"\n\nexport class Player {\n    constructor() {\n        this.playerBoard = new GameBoard;\n    }\n\n};\n\nexport class HumanPlayer extends Player {\n    constructor() {\n        super();\n        this.playerType = \"human\";\n    }\n}\n\nexport class ComputerPlayer extends Player {\n    constructor() {\n        super();\n        this.playerType = \"computer\";\n    }\n}","export class Ship {\n    constructor(length) {\n        this.length = length;\n        this.isShipSunk = false;\n        this.nrOfHitsTaken = 0;\n    }\n    hit() {\n        this.nrOfHitsTaken += 1;\n        return this.nrOfHitsTaken;\n    }\n    isSunk() {\n        if (this.nrOfHitsTaken >= this.length) return this.isShipSunk = true;\n        return this.isShipSunk = false;\n    }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Ship } from \"./ship-class\";\nimport { GameBoard } from \"./game-board-class\";\nimport { ComputerPlayer, Player } from \"./player-class\";\n\nlet playerShip = new Ship(6);\nconsole.log(playerShip);\nfor (let i = 0; i < playerShip.length; i++) {\n    playerShip.hit();\n}\n\nlet gameBoard1 = new GameBoard;\nconsole.log(gameBoard1.boardArray.length)\n// let player = new Player;\n// console.log(player);\n\n// let computerPlayer = new ComputerPlayer;\n// console.log(computerPlayer);\n\nconsole.log(playerShip.isSunk());\n\nconsole.log(gameBoard1.placeShip(playerShip, [3,3], \"horizontal\"));\nconsole.log(gameBoard1.boardArray)"],"names":[],"sourceRoot":""}