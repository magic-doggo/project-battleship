{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA,UAAU;AACV;AACA;AACA,IAAI,SAAS,gFAAgF,UAAU,YAAY,OAAO,KAAK,UAAU,UAAU,UAAU,UAAU,OAAO,MAAM,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,WAAW,OAAO,MAAM,UAAU,OAAO,KAAK,UAAU,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,MAAM,KAAK,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,UAAU,MAAM,KAAK,UAAU,UAAU,YAAY,aAAa,OAAO,WAAW,MAAM,KAAK,UAAU,UAAU,OAAO,KAAK,UAAU,SAAS,UAAU,YAAY,MAAM,4CAA4C,oBAAoB,qCAAqC,GAAG,YAAY,oBAAoB,sBAAsB,oBAAoB,mBAAmB,GAAG,wCAAwC,mBAAmB,kBAAkB,6BAA6B,4BAA4B,GAAG,eAAe,6BAA6B,2BAA2B,8BAA8B,mBAAmB,GAAG,oCAAoC,qBAAqB,GAAG,kBAAkB,qBAAqB,GAAG,kBAAkB,0BAA0B,GAAG,wBAAwB,oBAAoB,gBAAgB,GAAG,sBAAsB,4BAA4B,oBAAoB,iCAAiC,kBAAkB,qCAAqC,sBAAsB,iBAAiB,GAAG,gBAAgB,kBAAkB,mBAAmB,8BAA8B,6BAA6B,GAAG,kGAAkG,oBAAoB,mBAAmB,IAAI,sBAAsB,oBAAoB,mBAAmB,GAAG,4BAA4B,qBAAqB,GAAG,kBAAkB,4FAA4F,MAAM,qBAAqB;AACt+D;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;AC5F1B;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA,MAA+F;AAC/F,MAAqF;AACrF,MAA4F;AAC5F,MAA+G;AAC/G,MAAwG;AACxG,MAAwG;AACxG,MAAmG;AACnG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;AACrC,iBAAiB,uGAAa;AAC9B,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,sFAAO;;;;AAI6C;AACrE,OAAO,iEAAe,sFAAO,IAAI,sFAAO,UAAU,sFAAO,mBAAmB,EAAC;;;;;;;;;;;ACxBhE;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,qCAAqC;AACrC,wCAAwC;AACxC,6DAA6D;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA,4GAA4G;AAC5G;AACA;AACA;AACA,yFAAyF,YAAY;AACrG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2FAA2F,YAAY;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA,sHAAsH;AACtH;AACA;AACA;AACA,sFAAsF,YAAY;AAClG;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,wFAAwF,YAAY;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,8EAA8E;AAC9E;AACA;AACA;AACA,UAAU;AACV,yDAAyD,aAAa;AACtE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8DAA8D;AAC9D;AACA;AACA,wBAAwB,4DAA4D;AACpF;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO,yBAAyB;AAChC;AACA;AACA;;AAEO,wBAAwB;AAC/B;AACA;;;;;;;;;;;;;;;;;ACrV8C;;AAEvC;AACP;AACA,+BAA+B,wDAAS;AACxC;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;UChBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;;;;;;;;;ACAoC;AACW;AACsB;AAChD;;AAErB,0BAA0B,6CAAI;AAC9B,0BAA0B,6CAAI;AAC9B,wBAAwB,6CAAI;AAC5B,2BAA2B,6CAAI;AAC/B,wBAAwB,6CAAI;;AAE5B,4BAA4B,6CAAI;AAChC,4BAA4B,6CAAI;AAChC,0BAA0B,6CAAI;AAC9B,6BAA6B,6CAAI;AACjC,0BAA0B,6CAAI;;AAE9B,sBAAsB,sDAAW;AACjC,yBAAyB,yDAAc;;AAEvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAI;AAC5B;AACA;AACA;AACA;AACA,YAAY,wDAAS;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA,CAAC;;;AAGD;AACA;AACA","sources":["webpack://project-battleship/./src/style.css","webpack://project-battleship/./node_modules/css-loader/dist/runtime/api.js","webpack://project-battleship/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://project-battleship/./src/style.css?7163","webpack://project-battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://project-battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://project-battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://project-battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://project-battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://project-battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://project-battleship/./src/game-board-class.js","webpack://project-battleship/./src/player-class.js","webpack://project-battleship/./src/ship-class.js","webpack://project-battleship/webpack/bootstrap","webpack://project-battleship/webpack/runtime/compat get default export","webpack://project-battleship/webpack/runtime/define property getters","webpack://project-battleship/webpack/runtime/hasOwnProperty shorthand","webpack://project-battleship/webpack/runtime/make namespace object","webpack://project-battleship/webpack/runtime/nonce","webpack://project-battleship/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#boards-container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n}\n\n.board {\n    display: flex;\n    flex-wrap: wrap;\n    height: 400px;\n    width: 400px;\n}\n\n.humanGridItem,\n.computerGridItem {\n    height: 40px;\n    width: 40px;\n    box-sizing: border-box;\n    border: 2px solid red;\n}\n\n.yourTurn {\n    background-color: gray;\n    pointer-events: none;\n    border: 1px solid black;\n    color: wheat;\n}\n\n#human-board,\n#computer-board {\n    margin: 10px 0;\n}\n\n.board-title {\n    margin: 10px 0;\n}\n\n#player-turn {\n    font-weight: bolder;\n}\n\n.buttons-container {\n    display: flex;\n    gap: 20px;\n}\n\n.ships-container {\n    border: 2px solid red;\n    display: flex;\n    /* flex-direction: column; */\n    gap: 10px;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    width: 50%;\n}\n\n.shipBlock {\n    width: 40px;\n    height: 40px;\n    border: 1px solid black;\n    box-sizing: border-box;\n}\n\n/* #playerDestroyer,\n#playerSubmarine,\n#playerCruiser,\n#playerBattleship,\n#playerCarrier {\n    display: flex;\n    cursor: move;\n} */\n\n.draggableShip {\n    display: flex;\n    cursor: move;\n}\n\n.draggableShipVertical {\n    display: block;\n}\n\n\n\n/* body { */\n    /* Prevent the user from selecting text in the example */\n    /* user-select: none;\n  } */`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,eAAe;IACf,aAAa;IACb,YAAY;AAChB;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;IACtB,oBAAoB;IACpB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;;IAEI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,4BAA4B;IAC5B,SAAS;IACT,8BAA8B;IAC9B,eAAe;IACf,UAAU;AACd;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;;;;;;;GAOG;;AAEH;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;;;AAIA,WAAW;IACP,wDAAwD;IACxD;KACC\",\"sourcesContent\":[\"#boards-container {\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n}\\n\\n.board {\\n    display: flex;\\n    flex-wrap: wrap;\\n    height: 400px;\\n    width: 400px;\\n}\\n\\n.humanGridItem,\\n.computerGridItem {\\n    height: 40px;\\n    width: 40px;\\n    box-sizing: border-box;\\n    border: 2px solid red;\\n}\\n\\n.yourTurn {\\n    background-color: gray;\\n    pointer-events: none;\\n    border: 1px solid black;\\n    color: wheat;\\n}\\n\\n#human-board,\\n#computer-board {\\n    margin: 10px 0;\\n}\\n\\n.board-title {\\n    margin: 10px 0;\\n}\\n\\n#player-turn {\\n    font-weight: bolder;\\n}\\n\\n.buttons-container {\\n    display: flex;\\n    gap: 20px;\\n}\\n\\n.ships-container {\\n    border: 2px solid red;\\n    display: flex;\\n    /* flex-direction: column; */\\n    gap: 10px;\\n    justify-content: space-between;\\n    flex-wrap: wrap;\\n    width: 50%;\\n}\\n\\n.shipBlock {\\n    width: 40px;\\n    height: 40px;\\n    border: 1px solid black;\\n    box-sizing: border-box;\\n}\\n\\n/* #playerDestroyer,\\n#playerSubmarine,\\n#playerCruiser,\\n#playerBattleship,\\n#playerCarrier {\\n    display: flex;\\n    cursor: move;\\n} */\\n\\n.draggableShip {\\n    display: flex;\\n    cursor: move;\\n}\\n\\n.draggableShipVertical {\\n    display: block;\\n}\\n\\n\\n\\n/* body { */\\n    /* Prevent the user from selecting text in the example */\\n    /* user-select: none;\\n  } */\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","export class GameBoard {\n    constructor() {\n        this.boardArray = new Array(100);\n        // x   0     1     2        9\n        // 0 [0,0] [0,1] [0,2] .. [0,9]\n        // 1 [1,0] [1,1] [1,2]\n        // 2 [2,0] [2,1] [2,2]\n        // ...\n        // 9 [9,0] [9,1] [9,2] .. [9,9]\n        // this.placedShipsCoordinates = []; //iterate through this when ship is hit? not used atm\n        // this.hitCoordinates = []; //no functionality relies on this yet\n        // this.missedCoordinates = []; //no functionality relies on this yet\n        this.notShotCoordinates = this.createIndexArray(99); //creates array with val from 0 to 99\n        this.arrayOfPlacedShipObjects = [];\n        GameBoard.gameBoardClassInstances.push(this);\n    }\n\n    static isPlayer1Turn = true;\n    static gameBoardClassInstances = [];\n\n    // placeShip(\"boat-length 3\", [6,7], vertical) == means the boat starts 6,7 and ends at [6,9]\n    //try vertical always going down, horizontal always goes to the right\n    // placeShipOLd(ship, coordinates, direction) {\n    //     let arrayCoords = coordinates;\n    //     if (typeof coordinates == 'object') {\n    //         arrayCoords = (coordinates[0] * 10) + coordinates[1];\n    //     }\n    //     console.log(arrayCoords);\n    //     let tempArray = [];\n    //     let tempShipObject = {};\n    //     for (let i = 0; i < ship.length; i++) {\n    //         if (direction == \"vertical\") {\n    //             if (coordinates[0] + ship.length >= 10) throw new Error('ship does not fit vertically'); //fix this so it does not run every iteration\n    //             //increase by 10 when row changes (vertical changes)\n    //             if (this.boardArray[arrayCoords] != undefined) {\n    //                 tempArray = [];\n    //                 throw new Error(`ship overlaps vertically with another at index ${arrayCoords}`);\n    //             }\n    //             tempArray.push(arrayCoords);\n    //             arrayCoords += 10;\n    //             if (arrayCoords >= 100) console.log(arrayCoords, ' arraycoords vert');\n    //         } else if (direction == \"horizontal\") {\n    //             if (coordinates[1] + ship.length >= 10) throw new Error('ship does not fit horizontally');\n    //             if (this.boardArray[arrayCoords] != undefined) {\n    //                 tempArray = [];\n    //                 throw new Error(`ship overlaps horizontally with another at index ${arrayCoords}`)\n    //             };\n    //             //increase by 1 when column changes (horizontal changes)\n    //             tempArray.push(arrayCoords, ' arraycoords horiz');\n    //             arrayCoords += 1;\n    //             if (arrayCoords >= 100) console.log(arrayCoords);\n    //         }\n    //     }\n    //     // this.placedShipsCoordinates.push(tempArray); //not going to use placedshipscoordinates?\n\n    //     tempShipObject.coordinates = tempArray;\n    //     tempShipObject.shipInstance = ship;\n    //     this.arrayOfPlacedShipObjects.push(tempShipObject);\n\n    //     for (let coordinate of tempArray) {\n    //         this.boardArray[coordinate] = 1;\n    //     }\n    //     console.log(this);\n    //     console.log(tempArray , \" temparray\");\n    //     return tempArray;\n    // }\n\n    placeShip(ship, coordinates, direction) {\n        let arrayCoords = coordinates;\n        if (typeof coordinates == 'object') {\n            arrayCoords = (coordinates[0] * 10) + coordinates[1];\n        }\n        let tempArray = [];\n        let tempShipObject = {};\n        let coordinatesAsArrayValues;\n        if (arrayCoords < 10) {\n            let firstIndex = 0;\n            let secondIndex = firstDigit(arrayCoords)\n            coordinatesAsArrayValues = [firstIndex, secondIndex];\n        } else {\n            let firstIndex = firstDigit(arrayCoords);\n            let secondIndex = lastDigit(arrayCoords);\n            coordinatesAsArrayValues = [firstIndex, secondIndex];\n        };\n        for (let i = 0; i < ship.length; i++) {\n            if (direction == \"vertical\") {\n                if (coordinatesAsArrayValues[0] + ship.length >= 10) throw new Error('ship does not fit vertically'); //fix this so it does not run every iteration\n                //increase by 10 when row changes (vertical changes)\n                if (this.boardArray[arrayCoords] != undefined) {\n                    tempArray = [];\n                    throw new Error(`ship overlaps vertically with another at index ${arrayCoords}`);\n                }\n                tempArray.push(arrayCoords);\n                arrayCoords += 10;\n                if (arrayCoords >= 100) console.log(arrayCoords, ' arraycoords vert');\n            } else if (direction == \"horizontal\") {\n                if (coordinatesAsArrayValues[1] + ship.length >= 10) throw new Error('ship does not fit horizontally');\n                if (this.boardArray[arrayCoords] != undefined) {\n                    tempArray = [];\n                    throw new Error(`ship overlaps horizontally with another at index ${arrayCoords}`)\n                };\n                //increase by 1 when column changes (horizontal changes)\n                tempArray.push(arrayCoords);\n                arrayCoords += 1;\n                if (arrayCoords >= 100) console.log(arrayCoords);\n            }\n        }\n        // this.placedShipsCoordinates.push(tempArray); //not going to use placedshipscoordinates?\n\n        tempShipObject.coordinatesAsArrayValues = tempArray;\n        tempShipObject.shipInstance = ship;\n        this.arrayOfPlacedShipObjects.push(tempShipObject);\n\n        for (let coordinate of tempArray) {\n            this.boardArray[coordinate] = 1;\n        }\n        return tempArray;\n    }\n\n    receiveAttack(coordinates) {\n        let attackedArrayCoords = (coordinates[0] * 10) + coordinates[1];\n        if (this.boardArray[attackedArrayCoords] == 1) {\n            this.boardArray[attackedArrayCoords] = \"x\"; //place x on board if ship is hit\n            // this.hitCoordinates.push(attackedArrayCoords);\n            let index = this.notShotCoordinates.indexOf(attackedArrayCoords);\n            this.notShotCoordinates.splice(index, 1);\n\n            for (let ship of this.arrayOfPlacedShipObjects) {\n                for (let coordinate of ship.coordinatesAsArrayValues) {\n                    if (coordinate === attackedArrayCoords) {\n                        ship.shipInstance.hit();\n                    }\n                }\n            }\n\n        } else if (this.boardArray[attackedArrayCoords] == undefined) {\n            this.boardArray[attackedArrayCoords] = 0; //place 0 on board if attack missed\n            // this.missedCoordinates.push(attackedArrayCoords);\n            let index = this.notShotCoordinates.indexOf(attackedArrayCoords);\n            this.notShotCoordinates.splice(index, 1);\n        }\n        else if (this.boardArray[attackedArrayCoords] == \"x\" || this.boardArray[attackedArrayCoords] == 0) {\n            throw new Error(`You have already attacked ${coordinates} before, try a different spot`);\n        }\n        else throw new Error('Not a valid coordinate') //can make it check of coordinate exists in boardArray, but not needed?\n        //swap player turn? edit later 100\n        // if (this.checkIfAllShipsSunk()) document.getElementById('winner').innerText = 'Player Won';\n        // return `Turn of `\n    }\n\n    checkIfAllShipsSunk() {\n        if (!GameBoard.gameBoardClassInstances[0].boardArray.includes(1)) return true;\n        else if (!GameBoard.gameBoardClassInstances[1].boardArray.includes(1)) return true;\n        return false;\n    }\n\n    renderBoard(boardContainer, specificPlayerGridClass) {\n        for (let i = 0; i < this.boardArray.length; i++) {\n            let gridItem = document.createElement('div');\n            boardContainer.appendChild(gridItem);\n            gridItem.classList.add(specificPlayerGridClass);\n            if (i < 10) {\n                let firstIndex = 0;\n                let secondIndex = firstDigit(i)\n                let [a, b] = [firstIndex, secondIndex];\n                gridItem.addEventListener('click', (event) => {\n                    this.onCellClick([a, b], event);\n                });\n            } else {\n                let firstIndex = firstDigit(i);\n                let secondIndex = lastDigit(i);\n                let [a, b] = [firstIndex, secondIndex];\n                gridItem.addEventListener('click', (event) => {\n                    this.onCellClick([a, b], event);\n                });\n            }\n            gridItem.addEventListener('dragover', (event) => {\n                //prevent default to allow drop\n                event.preventDefault();\n            })\n        }\n    }\n\n    updateBoard(specificPlayerGridClass) { //maybe do not need player specific class param, since method is ran on 1 player board anyway\n        let childDivs = document.getElementsByClassName(specificPlayerGridClass);\n        //Update the board visually with current location of ships/hits/nothings\n        for (let i = 0; i < this.boardArray.length; i++) {\n            if (this.boardArray[i] == 1) {\n                //keep computer ships hidden\n                //updatePlayerBoardAfterPcAttack() is used on the player board, which does show ship location\n                childDivs[i].innerText = '';\n            } else if (this.boardArray[i] == 'x') {\n                childDivs[i].innerText = 'hit';\n            } else if (this.boardArray[i] == 0) {\n                childDivs[i].innerText = 'miss';\n            } else {\n                childDivs[i].innerText = \"\";\n            }\n        }\n\n        if (GameBoard.isPlayer1Turn === true) {\n            GameBoard.isPlayer1Turn = false;\n            // document.getElementById('player-turn').style.visibility = 'hidden';\n        } else {\n            GameBoard.isPlayer1Turn = true;\n            // document.getElementById('player-turn').style.visibility = 'visible';\n        };\n    }\n\n    onCellClick(coordinates, event) {//move dom changes to updateBoard method later?\n        let currentlyHiddenCells = document.querySelectorAll('.yourTurn');\n        let classesOfGridItem = event.target.className.split(' ');\n        let firstClassesOfGridItem = classesOfGridItem[0];\n        this.receiveAttack(coordinates);\n        this.updateBoard(firstClassesOfGridItem);\n        let cellsOnClickedBoard = document.getElementsByClassName(firstClassesOfGridItem);\n        currentlyHiddenCells.forEach(cell => {\n            cell.classList.remove('yourTurn');\n        });\n        for (let i = 0; i < cellsOnClickedBoard.length; i++) {\n            cellsOnClickedBoard[i].classList.toggle('yourTurn');\n        };\n        // if (GameBoard.isPlayer1Turn === true) {\n        //     GameBoard.isPlayer1Turn = false;\n        //     document.getElementById('player-turn').style.visibility = 'hidden';\n        // } else {\n        //     GameBoard.isPlayer1Turn = true;\n        //     document.getElementById('player-turn').style.visibility = 'visible';\n        // };\n        // console.log(GameBoard.gameBoardClassInstances[0].boardArray);\n        // console.log(GameBoard.gameBoardClassInstances[1].boardArray, \"  computer\");\n        if (this.checkIfAllShipsSunk()) {\n            document.getElementById('winner').innerText = 'Player 1 Won';\n            document.getElementById('boards-container').classList.add('yourTurn');\n        }\n        else GameBoard.gameBoardClassInstances[0].receiveAttackFromPc(GameBoard.gameBoardClassInstances[0].getRadomNotShotPlayerBoardCoordinate)     \n    }\n\n    createIndexArray(n) {\n        let newArr = [];\n        for (let i = 0; i <= n; i++) {\n            newArr.push(i);\n        }\n        return newArr;\n    }\n\n    receiveAttackFromPc(randomCoordFunction) {\n        //is storing logs to a different class instance in each class instance cheating? GameBoard.gameBoardClassInstances[0]\n        //since we only interact with pc board via dom, pc GameBoard instance can through this interact with player GameBoard instance\n        let coordinates = randomCoordFunction();\n        if (GameBoard.gameBoardClassInstances[0].boardArray[coordinates] == 1) {\n            GameBoard.gameBoardClassInstances[0].boardArray[coordinates] = \"x\"; //place x on board if ship is hit\n            // GameBoard.gameBoardClassInstances[0].hitCoordinates.push(coordinates);\n            let index = GameBoard.gameBoardClassInstances[0].notShotCoordinates.indexOf(coordinates);\n            GameBoard.gameBoardClassInstances[0].notShotCoordinates.splice(index, 1);\n            for (let ship of GameBoard.gameBoardClassInstances[0].arrayOfPlacedShipObjects) {\n                for (let coordinate of ship.coordinatesAsArrayValues) {\n                    if (coordinate === coordinates) {\n                        ship.shipInstance.hit();\n                    }\n                }\n            }\n        } else if (GameBoard.gameBoardClassInstances[0].boardArray[coordinates] == undefined) {\n            GameBoard.gameBoardClassInstances[0].boardArray[coordinates] = 0; //place 0 on board if attack missed\n            // GameBoard.gameBoardClassInstances[0].missedCoordinates.push(coordinates);\n            let index = GameBoard.gameBoardClassInstances[0].notShotCoordinates.indexOf(coordinates);\n            GameBoard.gameBoardClassInstances[0].notShotCoordinates.splice(index, 1);\n        } else if (GameBoard.gameBoardClassInstances[0].boardArray[coordinates] == \"x\" || GameBoard.gameBoardClassInstances[0].boardArray[coordinates] == 0) {\n            throw new Error(`You have already attacked ${coordinates} before, try a different spot`);\n        } else throw new Error('Not a valid coordinate') //can make it check of coordinate exists in boardArray, but not needed?\n        GameBoard.gameBoardClassInstances[0].updatePlayerBoardAfterPcAttack('humanGridItem');\n        if (this.checkIfAllShipsSunk()) {\n            document.getElementById('winner').innerText = 'Computer Won';\n            document.getElementById('boards-container').classList.add('yourTurn');\n            // document.getElementById('player-turn').style.visibility = 'hidden';\n        }\n    }\n\n    getRadomNotShotPlayerBoardCoordinate() {\n        return GameBoard.gameBoardClassInstances[0].notShotCoordinates[(Math.floor(Math.random() * GameBoard.gameBoardClassInstances[0].notShotCoordinates.length))]\n    }\n\n    updatePlayerBoardAfterPcAttack(specificPlayerGridClass) { //I could just use updatePlayerBoard and stop using \"this.\"? Alternate player boards based on isPlayer1Turn?\n        let childDivs = document.getElementsByClassName(specificPlayerGridClass);\n        //Update the board visually with current location of ships/hits/nothings\n        for (let i = 0; i < GameBoard.gameBoardClassInstances[0].boardArray.length; i++) {\n            if (GameBoard.gameBoardClassInstances[0].boardArray[i] == 1) {\n                childDivs[i].innerText = 'ship';\n            } else if (GameBoard.gameBoardClassInstances[0].boardArray[i] == 'x') {\n                childDivs[i].innerText = 'hit';\n            } else if (GameBoard.gameBoardClassInstances[0].boardArray[i] == 0) {\n                childDivs[i].innerText = 'miss';\n            } else childDivs[i].innerText = \"\";\n        }\n        let currentlyHiddenCells = document.querySelectorAll('.yourTurn');\n        let cellsOnClickedBoard = document.getElementsByClassName(specificPlayerGridClass);\n        currentlyHiddenCells.forEach(cell => {\n            cell.classList.remove('yourTurn');\n        });\n        for (let i = 0; i < cellsOnClickedBoard.length; i++) {\n            cellsOnClickedBoard[i].classList.toggle('yourTurn');\n        };\n        if (GameBoard.isPlayer1Turn === true) {\n            GameBoard.isPlayer1Turn = false;\n            // document.getElementById('player-turn').style.visibility = 'hidden';\n        } else {\n            GameBoard.isPlayer1Turn = true;\n            // document.getElementById('player-turn').style.visibility = 'visible';\n        }\n    }\n\n    getRandomShipDirection() {\n        let shipDirections = ['vertical', 'horizontal'];\n        return shipDirections[Math.floor(Math.random() * shipDirections.length)];\n    }\n\n    placeShipsRandomly(arrayOfPlayerShips, player) {\n        let coordArray = this.createIndexArray(99);\n        for (let ship of arrayOfPlayerShips) {\n            let potentialShipCoords = [];\n            while (potentialShipCoords[0] == undefined) {\n                let coords = Math.floor(Math.random() * coordArray.length);\n                try {\n                    potentialShipCoords = player.playerBoard.placeShip(ship, coords, this.getRandomShipDirection());\n                } catch (error) {\n                    console.log(coords);\n                }\n            }\n        }\n    }\n}\n\n//should these be class methods too? used in the GameBoard class but not exactly connected, just helper functions\n//project requirement is not to have global functions\nexport function firstDigit(n) { //use to get 1st index digit and convert too 1st coordinate\n    while (n >= 10) n /= 10;\n    return Math.floor(n)\n}\n\nexport function lastDigit(n) { //use to get 2nd idex digit and convert to 2nd coordinate\n    return Math.floor(n % 10);\n}","import { GameBoard } from \"./game-board-class\"\n\nexport class Player {\n    constructor() {\n        this.playerBoard = new GameBoard;\n    }\n\n};\n\nexport class HumanPlayer extends Player {\n    constructor() {\n        super();\n        this.playerType = \"human\";\n    }\n}\n\nexport class ComputerPlayer extends Player {\n    constructor() {\n        super();\n        this.playerType = \"computer\";\n    }\n}","export class Ship {\n    constructor(length) {\n        // this.name = name;\n        this.length = length;\n        this.isShipSunk = false;\n        this.nrOfHitsTaken = 0;\n    }\n    hit() {\n        this.nrOfHitsTaken += 1;\n        return this.nrOfHitsTaken;\n    }\n    isSunk() {\n        if (this.nrOfHitsTaken >= this.length) return this.isShipSunk = true;\n        return this.isShipSunk = false;\n    }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","import { Ship } from \"./ship-class\";\nimport { GameBoard } from \"./game-board-class\";\nimport { ComputerPlayer, Player, HumanPlayer } from \"./player-class\";\nimport './style.css';\n\nlet playerDestroyer = new Ship(2);\nlet playerSubmarine = new Ship(3);\nlet playerCruiser = new Ship(3);\nlet playerBattleship = new Ship(4);\nlet playerCarrier = new Ship(5);\n\nlet computerDestroyer = new Ship(2);\nlet computerSubmarine = new Ship(3);\nlet computerCruiser = new Ship(3);\nlet computerBattleship = new Ship(4);\nlet computerCarrier = new Ship(5);\n\nlet humanPlayer = new HumanPlayer;\nlet computerPlayer = new ComputerPlayer;\n\nlet humanBoard = document.getElementById('human-board');\nlet computerBoard = document.getElementById('computer-board');\nhumanPlayer.playerBoard.renderBoard(humanBoard, 'humanGridItem');\ncomputerPlayer.playerBoard.renderBoard(computerBoard, 'computerGridItem');\n\n//fix eslint output tab: Config (unnamed): Key \"plugins\": This appears to be in eslintrc format (array of strings) rather than flat config format (object)\n\nlet arrayOfPlayerShips = [playerDestroyer, playerSubmarine, playerCruiser, playerBattleship, playerCarrier];\nlet arrayOfComputerShips = [computerDestroyer, computerSubmarine, computerCruiser, computerBattleship, computerCarrier];\n\n// humanPlayer.playerBoard.placeShipsRandomly(arrayOfPlayerShips, humanPlayer);\n// computerPlayer.playerBoard.placeShipsRandomly(arrayOfComputerShips, computerPlayer);\n\n// computerPlayer.playerBoard.updateBoard(\"computerGridItem\");\n// humanPlayer.playerBoard.updatePlayerBoardAfterPcAttack(\"humanGridItem\");\n\n//do I want player/computer to shoot again if they landed a hit?\n\nconst shufflePlayerShipsButton = document.getElementById('shuffle-board');\nshufflePlayerShipsButton.addEventListener('click', () => {\n    humanPlayer.playerBoard.boardArray = new Array(100);\n    humanPlayer.playerBoard.placeShipsRandomly(arrayOfPlayerShips, humanPlayer);\n    humanPlayer.playerBoard.updatePlayerBoardAfterPcAttack(\"humanGridItem\");\n\n    computerPlayer.playerBoard.boardArray = new Array(100);\n    computerPlayer.playerBoard.placeShipsRandomly(arrayOfComputerShips, computerPlayer);\n    computerPlayer.playerBoard.updateBoard(\"computerGridItem\");\n});\n\n//make game start without ships? or have button to place ships manually\n//drag ship to spot\n//make function to check if spot is valid\n//placeship at location\n\n//maybe update renderBoard to add event listener for drop?\n//https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drop_event\n\n//how to know ship and direction in rederboard, before dragevent is started?\n//or move it all to different method/module\n\nlet dragged = null;\nlet playerDestroyerDiv = document.getElementById('playerDestroyer');\nplayerDestroyerDiv.addEventListener('dragstart', (event) => {\n    dragged = event.target;\n    console.log(dragged.id);\n    console.log(dragged.childElementCount)\n})\nconsole.log(playerDestroyerDiv)\n\nlet playerGridItems = document.getElementsByClassName('humanGridItem');\n// for (let playerGridItem of playerGridItems) {\n//     console.log(indexo)\n//     playerGridItem.addEventListener('drop', (event) => {\n//         event.preventDefault();\n//         if (event.target.className === 'humanGridItem') {\n//             let ship;\n//             // this.placeShip(ship, i, direction) //define ship and direction each time for each ship?\n//             console.log(this, \" this\");\n//             console.log(event.target);\n//             if (dragged.id == 'playerDestroyer') {\n//                 ship = playerDestroyer;\n//             }\n//             GameBoard.gameBoardClassInstances[0].placeShip(ship, 3, 'vertical')\n//             humanPlayer.playerBoard.updatePlayerBoardAfterPcAttack(\"humanGridItem\");\n//         }\n//     })\n// }\n\nfor (let i = 0; i < playerGridItems.length; i++) {\n    playerGridItems[i].addEventListener('drop', (event) => {\n        event.preventDefault();\n        if (event.target.className === 'humanGridItem') {\n            let ship;\n            // this.placeShip(ship, i, direction) //define ship and direction each time for each ship?\n            console.log(this, \" this\");\n            console.log(event.target);\n            if (dragged.id == 'playerDestroyer') {\n                ship = playerDestroyer;\n            }\n            GameBoard.gameBoardClassInstances[0].placeShip(ship, i, 'vertical')\n            humanPlayer.playerBoard.updatePlayerBoardAfterPcAttack(\"humanGridItem\");\n        }\n    })\n}\n\n// let \nlet flipShipDirButton = document.getElementById('ships-direction');\nflipShipDirButton.addEventListener('click', () => {\n    let draggableShips = document.getElementsByClassName('draggableShip');\n    for (let i = 0; i < draggableShips.length; i++) {\n        draggableShips[i].classList.toggle('draggableShipVertical');\n    }\n})\n\n\n//make button to change orientation of ships in box: vertical or horizontal\n//depending on current orientation, use this as 'direction' in placeship\n//have ways to check dragged.id for all ships, not repetitive if possible\n"],"names":[],"sourceRoot":""}