{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3B8C;;AAEvC;AACP;AACA,+BAA+B,wDAAS;AACxC;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoC;AACW;AACS;;AAExD;AACA;;AAEA;AACA;AACA,iBAAiB,iDAAM;AACvB;;AAEA,yBAAyB,yDAAc;AACvC,4B","sources":["webpack://project-battleship/./src/game-board-class.js","webpack://project-battleship/./src/player-class.js","webpack://project-battleship/./src/ship-class.js","webpack://project-battleship/webpack/bootstrap","webpack://project-battleship/webpack/runtime/define property getters","webpack://project-battleship/webpack/runtime/hasOwnProperty shorthand","webpack://project-battleship/webpack/runtime/make namespace object","webpack://project-battleship/./src/index.js"],"sourcesContent":["export class GameBoard {\n    constructor() {\n        this.columns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n        this.rows = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        this.board = this.createBoard(); //need to know if a square is hit or not. maybe each cell is an array or an object saying if empty/ship/hit\n    }\n\n    createBoard() {\n        let board = [];\n        for (let row of this.rows) {\n            for (let column of this.columns) {\n                let cell = column+row;\n                board.push(cell);\n            }\n        }\n        return board;\n\n    }\n\n    placeShip() {\n\n    }\n\n    receivedAttack(coordinates) {\n        //ship.hit if hit\n        //or record coordinates of hit\n    }\n}","import { GameBoard } from \"./game-board-class\"\n\nexport class Player {\n    constructor() {\n        this.playerBoard = new GameBoard;\n    }\n\n};\n\nexport class HumanPlayer extends Player {\n    constructor() {\n        super();\n        this.playerType = \"human\";\n    }\n}\n\nexport class ComputerPlayer extends Player {\n    constructor() {\n        super();\n        this.playerType = \"computer\";\n    }\n}","export class Ship {\n    constructor(length) {\n        this.length = length;\n        this.isShipSunk = false;\n        this.nrOfHitsTaken = 0;\n    }\n    hit() {\n        this.nrOfHitsTaken += 1;\n    }\n    isSunk() {\n        if (this.nrOfHitsTaken >= this.length) return this.isShipSunk = true;\n    }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Ship } from \"./ship-class\";\nimport { GameBoard } from \"./game-board-class\";\nimport { ComputerPlayer, Player } from \"./player-class\";\n\n// let playerShip = new Ship(3);\n// console.log(playerShip);\n\n// let gameBoard1 = new GameBoard;\n// console.log(gameBoard1)\nlet player = new Player;\nconsole.log(player);\n\nlet computerPlayer = new ComputerPlayer;\nconsole.log(computerPlayer);"],"names":[],"sourceRoot":""}